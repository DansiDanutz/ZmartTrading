#!/usr/bin/env python3
"""
Simple password change test without email dependency
"""

import requests
import json

BASE_URL = 'http://localhost:5000/api'

def test_password_change_simple():
    print("=" * 60)
    print("üîê SIMPLE PASSWORD CHANGE TEST")
    print("=" * 60)
    
    # Create a session to maintain cookies
    session = requests.Session()
    
    # Step 1: Login as SuperAdmin
    print("\n1Ô∏è‚É£ Logging in as SuperAdmin...")
    login_data = {
        "email": "seme@kryptostack.com",
        "password": "Seme0504"
    }
    
    try:
        response = session.post(f"{BASE_URL}/login", json=login_data)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Login successful")
            print(f"Response: {response.json()}")
        else:
            print(f"‚ùå Login failed: {response.json()}")
            return False
    except Exception as e:
        print(f"‚ùå Login error: {e}")
        return False
    
    # Step 2: Check session
    print("\n2Ô∏è‚É£ Checking session...")
    try:
        response = session.get(f"{BASE_URL}/session")
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            print("‚úÖ Session valid")
            print(f"Response: {response.json()}")
        else:
            print(f"‚ùå Session invalid: {response.json()}")
            return False
    except Exception as e:
        print(f"‚ùå Session check error: {e}")
        return False
    
    # Step 3: Request password change code
    print("\n3Ô∏è‚É£ Requesting password change verification code...")
    try:
        response = session.post(f"{BASE_URL}/auth/request-password-change")
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        
        if response.status_code == 200:
            print("‚úÖ Verification code request successful")
            print("üìß Check your email (seme@kryptostack.com) for the verification code")
        else:
            print("‚ùå Verification code request failed")
            return False
    except Exception as e:
        print(f"‚ùå Verification code request error: {e}")
        return False
    
    # Step 4: Wait for user to provide code
    print("\n4Ô∏è‚É£ Waiting for verification code...")
    print("Please check your email and enter the verification code:")
    code = input("Enter verification code: ").strip()
    
    if not code:
        print("‚ùå No code provided")
        return False
    
    # Step 5: Change password with verification code
    print("\n5Ô∏è‚É£ Changing password with verification code...")
    new_password = "NewSeme0504"  # New password for testing
    
    try:
        response = session.post(f"{BASE_URL}/auth/change-password", json={
            "code": code,
            "new_password": new_password
        })
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        
        if response.status_code == 200:
            print("‚úÖ Password changed successfully!")
            print(f"New password: {new_password}")
        else:
            print("‚ùå Password change failed")
            return False
    except Exception as e:
        print(f"‚ùå Password change error: {e}")
        return False
    
    # Step 6: Test login with new password
    print("\n6Ô∏è‚É£ Testing login with new password...")
    try:
        response = requests.post(f"{BASE_URL}/login", json={
            "email": "seme@kryptostack.com",
            "password": new_password
        })
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Login with new password successful!")
        else:
            print("‚ùå Login with new password failed")
            return False
    except Exception as e:
        print(f"‚ùå Login test error: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ SIMPLE PASSWORD CHANGE TEST COMPLETED")
    print("=" * 60)
    
    return True

def test_password_reset_simple():
    print("\n" + "=" * 60)
    print("üîê SIMPLE PASSWORD RESET TEST")
    print("=" * 60)
    
    # Step 1: Request reset code (no login required)
    print("\n1Ô∏è‚É£ Requesting password reset code...")
    try:
        response = requests.post(f"{BASE_URL}/auth/request-reset-code", json={
            "email": "seme@kryptostack.com"
        })
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        
        if response.status_code == 200:
            print("‚úÖ Reset code request successful")
            print("üìß Check your email (seme@kryptostack.com) for the reset code")
        else:
            print("‚ùå Reset code request failed")
            return False
    except Exception as e:
        print(f"‚ùå Reset code request error: {e}")
        return False
    
    # Step 2: Wait for user to provide code
    print("\n2Ô∏è‚É£ Waiting for reset code...")
    print("Please check your email and enter the reset code:")
    code = input("Enter reset code: ").strip()
    
    if not code:
        print("‚ùå No code provided")
        return False
    
    # Step 3: Reset password with code
    print("\n3Ô∏è‚É£ Resetting password with code...")
    reset_password = "ResetSeme0504"  # Temporary password for testing
    
    try:
        response = requests.post(f"{BASE_URL}/auth/verify-reset-code", json={
            "email": "seme@kryptostack.com",
            "code": code,
            "new_password": reset_password
        })
        print(f"Status: {response.status_code}")
        print(f"Response: {response.json()}")
        
        if response.status_code == 200:
            print("‚úÖ Password reset successful!")
            print(f"Reset password: {reset_password}")
        else:
            print("‚ùå Password reset failed")
            return False
    except Exception as e:
        print(f"‚ùå Password reset error: {e}")
        return False
    
    # Step 4: Test login with reset password
    print("\n4Ô∏è‚É£ Testing login with reset password...")
    try:
        response = requests.post(f"{BASE_URL}/login", json={
            "email": "seme@kryptostack.com",
            "password": reset_password
        })
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("‚úÖ Login with reset password successful!")
        else:
            print("‚ùå Login with reset password failed")
            return False
    except Exception as e:
        print(f"‚ùå Login test error: {e}")
        return False
    
    print("\n" + "=" * 60)
    print("üéâ SIMPLE PASSWORD RESET TEST COMPLETED")
    print("=" * 60)
    
    return True

if __name__ == "__main__":
    print("üîê SIMPLE PASSWORD TESTING")
    print("=" * 60)
    
    # Test password change
    if test_password_change_simple():
        print("\n‚úÖ Password change test PASSED")
    else:
        print("\n‚ùå Password change test FAILED")
    
    # Test password reset
    if test_password_reset_simple():
        print("\n‚úÖ Password reset test PASSED")
    else:
        print("\n‚ùå Password reset test FAILED")
    
    print("\n" + "=" * 60)
    print("üéâ ALL SIMPLE PASSWORD TESTS COMPLETED")
    print("=" * 60) 